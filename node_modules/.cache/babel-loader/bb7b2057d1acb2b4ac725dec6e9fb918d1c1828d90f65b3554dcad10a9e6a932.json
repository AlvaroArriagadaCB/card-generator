{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || Object.assign || function (t) {\n  for (var s, i = 1, n = arguments.length; i < n; i++) {\n    s = arguments[i];\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar React = require(\"react\");\nvar react_1 = require(\"react\");\nvar loadImageProps_1 = require(\"./loadImageProps\");\nvar isDefined_1 = require(\"./isDefined\");\nvar constants_1 = require(\"./constants\");\nvar transparentGIF_1 = require(\"./transparentGIF\");\nvar ImageTemplate_1 = require(\"./ImageTemplate\");\n/**\n * Chooses a different src string depending on\n * the status provided.\n * That is, returns the loadingURL src if the status is\n * `LOADING`, the errorURL src if the status is `ERROR`,\n * the emptyURL src if the status is `EMPTY`, and the\n * default src for any other status\n * @param status the status, `LOADING`, `ERROR`, `EMPTY` or `DONE`\n * @param src the default src string, to be used on DONE status, or if other URLS are not available\n * @param urls an object of three urls, loadingURL,errorURL,emptyURL, all optional\n */\nexports.getSRC = function (status, src, props) {\n  if (!props) {\n    return src || '';\n  }\n  ;\n  var loadingURL = props.loadingURL,\n    errorURL = props.errorURL,\n    emptyURL = props.emptyURL;\n  var ret = status === constants_1.LOADING && loadingURL ? loadingURL : status === constants_1.ERROR && errorURL ? errorURL : status === constants_1.EMPTY && emptyURL ? emptyURL : src || '';\n  return ret;\n};\n/**\n * Returns the status\n * @param props\n */\nexports.getStatus = function (props) {\n  return props.status || constants_1.DONE;\n};\n/**\n * returns the crop type\n * @param props\n */\nexports.getCrop = function (props) {\n  return props && props.crop ? props.crop : 'contain';\n};\n/**\n * Returns a data-x string, where 'x' is the status\n * useful for css targeting\n * @param status the status of the image loader\n */\nexports.statusAsAttr = function (status) {\n  return \"data-status-\" + (status || 'unknown').toLowerCase();\n};\nvar ImageLoader = /** @class */function (_super) {\n  __extends(ImageLoader, _super);\n  function ImageLoader(props, context) {\n    var _this = _super.call(this, props, context) || this;\n    ;\n    _this.state = {\n      src: transparentGIF_1.transparentGIF,\n      alt: '',\n      status: constants_1.EMPTY,\n      width: 0,\n      height: 0\n    };\n    return _this;\n  }\n  ;\n  ImageLoader.prototype.load = function (props) {\n    var _this = this;\n    this.setState({\n      status: constants_1.LOADING\n    });\n    ;\n    loadImageProps_1.loadImageProps(props, function (error, _a) {\n      var src = _a.src,\n        alt = _a.alt,\n        width = _a.width,\n        height = _a.height;\n      return error ? _this.setState({\n        status: constants_1.ERROR,\n        error: error\n      }) : _this.setState({\n        status: constants_1.DONE,\n        src: src,\n        alt: alt,\n        width: width,\n        height: height\n      });\n    });\n  };\n  ;\n  ImageLoader.prototype.componentDidMount = function () {\n    if (this.props.file) {\n      this.load(this.props.file);\n    }\n  };\n  ;\n  ImageLoader.prototype.componentWillReceiveProps = function (nextProps) {\n    if (nextProps.file !== this.props.file) {\n      if (nextProps.file) {\n        this.load(nextProps.file);\n      } else if (nextProps.file == null) {\n        this.setState({\n          src: transparentGIF_1.transparentGIF\n        });\n      }\n    }\n  };\n  ;\n  ImageLoader.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    return isDefined_1.isDefined(nextProps.file) && nextProps.file !== this.props.file || isDefined_1.isDefined(nextProps.alt) && nextProps.alt !== this.props.alt || isDefined_1.isDefined(nextProps.template) && nextProps.template !== this.props.template || nextState.src !== this.state.src;\n  };\n  ;\n  ImageLoader.prototype.render = function () {\n    var _a = this.state,\n      src = _a.src,\n      imgWidth = _a.width,\n      imgHeight = _a.height;\n    var _b = this.props,\n      template = _b.template,\n      width = _b.width,\n      height = _b.height,\n      className = _b.className;\n    var alt = this.props.alt || this.state.alt || '';\n    ;\n    var crop = exports.getCrop(this.props);\n    var status = exports.getStatus(this.state);\n    var statusAttr = exports.statusAsAttr(status);\n    var props = __assign({}, this.props, {\n      src: exports.getSRC(status, src, this.props),\n      alt: alt,\n      width: width,\n      height: height,\n      imgWidth: imgWidth,\n      imgHeight: imgHeight,\n      crop: crop,\n      status: status,\n      statusAttr: statusAttr,\n      className: className\n    });\n    return React.createElement(template, props);\n  };\n  ImageLoader.defaultProps = {\n    template: ImageTemplate_1.ImageTemplate,\n    crop: 'contain',\n    emptyURL: transparentGIF_1.transparentGIF\n  };\n  return ImageLoader;\n}(react_1.Component);\nexports.ImageLoader = ImageLoader;\nexports.default = ImageLoader;","map":{"version":3,"names":["React","require","react_1","loadImageProps_1","isDefined_1","constants_1","transparentGIF_1","ImageTemplate_1","exports","getSRC","status","src","props","loadingURL","errorURL","emptyURL","ret","LOADING","ERROR","EMPTY","getStatus","DONE","getCrop","crop","statusAsAttr","toLowerCase","ImageLoader","_super","__extends","context","_this","call","state","transparentGIF","alt","width","height","prototype","load","setState","loadImageProps","error","_a","componentDidMount","file","componentWillReceiveProps","nextProps","shouldComponentUpdate","nextState","isDefined","template","render","imgWidth","imgHeight","_b","className","statusAttr","__assign","createElement","defaultProps","ImageTemplate","Component","default"],"sources":["/Users/loskilltrosblues/Desktop/dashboard/my-dashboard/node_modules/react-image-file/src/ImageLoader.tsx"],"sourcesContent":["import * as React from 'react'\nimport { Component } from 'react'\nimport { loadImageProps, ImageProps } from './loadImageProps'\nimport { isDefined } from './isDefined'\nimport { EMPTY, DONE, ERROR, LOADING, ImageLoaderLoadStatus } from './constants'\nimport { transparentGIF } from './transparentGIF'\nimport { ImageTemplate } from './ImageTemplate'\n\n/** \n * A type representing the crop option\n */\nexport type CropAttribute = 'cover' | 'contain'\n\nexport interface ImageLoaderProps \n  { template?: any\n  ; file?: string | File | Blob\n  ; alt?: string\n  ; crop?: CropAttribute\n  ; loadingURL?: string\n  ; errorURL?: string\n  ; emptyURL?: string\n  ; width?: number\n  ; height?: number\n  ; className?: string\n  }\n\nexport interface ImageLoaderState\n  { src?: string\n  ; alt?: string\n  ; status?: ImageLoaderLoadStatus\n  ; width: number\n  ; height: number\n  ; error?: Error | DOMError\n  }\n\nexport interface ImageTemplateProps extends ImageLoaderProps\n  { src: string\n  ; alt: string\n  ; width?: number\n  ; height?: number\n  ; imgWidth: number\n  ; imgHeight: number\n  ; status: ImageLoaderLoadStatus\n  ; statusAttr: string\n  ; children?: any\n  ; className?: string\n  }\n\n/**\n * Chooses a different src string depending on\n * the status provided.\n * That is, returns the loadingURL src if the status is \n * `LOADING`, the errorURL src if the status is `ERROR`,\n * the emptyURL src if the status is `EMPTY`, and the\n * default src for any other status  \n * @param status the status, `LOADING`, `ERROR`, `EMPTY` or `DONE`\n * @param src the default src string, to be used on DONE status, or if other URLS are not available\n * @param urls an object of three urls, loadingURL,errorURL,emptyURL, all optional\n */\nexport const getSRC = \n  ( status?: ImageLoaderLoadStatus, src?: string, props?: ImageLoaderProps )=>\n  { if( !props ){ return src || '' }\n  ; const { loadingURL, errorURL, emptyURL } = props\n  ; const ret =\n    ( status === LOADING && loadingURL\n    ? loadingURL\n    : ( status === ERROR && errorURL\n      ? errorURL\n      : ( status === EMPTY && emptyURL\n        ? emptyURL\n        : src || ''\n        )\n      )\n    )\n  ; return ret\n  }\n\n/**\n * Returns the status\n * @param props \n */\nexport const getStatus = \n  ( props: ImageLoaderState ): ImageLoaderLoadStatus => \n  ( props.status || DONE )\n\n/**\n * returns the crop type\n * @param props \n */\nexport const getCrop = \n  ( props: ImageLoaderProps ): CropAttribute => \n  ( props && props.crop ? props.crop : 'contain' )\n\n/**\n * Returns a data-x string, where 'x' is the status\n * useful for css targeting\n * @param status the status of the image loader\n */\nexport const statusAsAttr = \n  ( status?: ImageLoaderLoadStatus ) => \n  ( `data-status-${(status||'unknown').toLowerCase()}` )\n\nexport class ImageLoader extends Component< ImageLoaderProps, ImageLoaderState >\n  { static defaultProps:ImageLoaderProps = \n    { template: ImageTemplate\n    ,  crop:'contain'\n    ,  emptyURL:transparentGIF\n    }\n  ; constructor(props:ImageLoaderProps,context:any)\n    { super( props, context );\n    ; this.state =\n      { src:transparentGIF\n      ,  alt:''\n      ,  status:EMPTY\n      ,  width:0\n      ,  height:0\n      }\n    }\n  ; load( props: File | Blob | string )\n    { this.setState( { status: LOADING } );\n    ; loadImageProps\n        ( props\n        , ( error: Error | DOMError | null\n          , { src, alt, width, height }: ImageProps\n          ) =>\n          ( error\n          ? this.setState({status:ERROR,error})\n          : this.setState({\n              status:DONE\n            ,  src\n            ,  alt\n            ,  width\n            ,  height\n            })\n          )\n        )\n    }\n  ; componentDidMount()\n    { if( this.props.file )\n      { this.load( this.props.file )\n      }\n    }\n  ; componentWillReceiveProps( nextProps: ImageLoaderProps )\n    { if( nextProps.file !== this.props.file )\n      { if( nextProps.file )\n        { this.load( nextProps.file )\n        }\n        else if( nextProps.file == null )\n        { this.setState( { src: transparentGIF } )\n        }\n      }\n    }\n  ; shouldComponentUpdate( nextProps: ImageLoaderProps, nextState: ImageLoaderState ): boolean\n    { return (\n      ( isDefined( nextProps.file ) && nextProps.file !== this.props.file ) ||\n      ( isDefined( nextProps.alt ) && nextProps.alt !== this.props.alt ) ||\n      ( isDefined( nextProps.template ) && nextProps.template !== this.props.template ) ||\n      ( nextState.src !== this.state.src )\n    )\n  }\n  ; render()\n  { const \n    { src\n    , width: imgWidth\n    , height: imgHeight\n    } = this.state\n  ; const \n    { template\n    , width\n    , height\n    , className\n    } = this.props\n  ; const alt = this.props.alt || this.state.alt || '';\n  ; const crop = getCrop( this.props ) \n  ; const status = getStatus( this.state )\n  ; const statusAttr = statusAsAttr( status )\n  ; const props:ImageTemplateProps = \n    {...this.props\n    , src:getSRC( status, src, this.props )\n    , alt\n    , width\n    , height\n    , imgWidth\n    , imgHeight\n    , crop\n    , status\n    , statusAttr\n    , className\n    }\n  ; return React.createElement( template, props );\n  }\n}\n\nexport default ImageLoader"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}