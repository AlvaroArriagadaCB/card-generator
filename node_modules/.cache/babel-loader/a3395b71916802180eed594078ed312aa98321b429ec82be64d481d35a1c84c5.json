{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar isImageLoaded_1 = require(\"./isImageLoaded\");\nvar noOp_1 = require(\"./noOp\");\n/**\n * Creates a DOM image object and set its onload and onerror properties.\n * If the image was already cached, onload is set immediatly.\n * @param  src     the source of the image, You may leave it blank if you want to set it later\n * @param  onLoad  callback to call when the image loads (or has loaded). Receives the image object as a parameter\n * @param  onError callback to call when the image has an error. Receives the image object as a parameter.\n *                 Optional, but note that `onload` will never be called if an error occurs\n * @return         the image object\n */\nexports.createHTMLImageElement = function (src, onLoad, onError) {\n  var img = new Image();\n  var called = false;\n  img.alt = '';\n  var callback = function callback() {\n    if (!called) {\n      called = true;\n      img.onload = noOp_1.noOp;\n      img.onerror = noOp_1.noOp;\n      return true;\n    }\n    ;\n    return false;\n  };\n  var onLoadWrapped = function onLoadWrapped() {\n    return callback() && onLoad && onLoad(img);\n  };\n  var onErrorWrapped = function onErrorWrapped(err) {\n    return callback() && onError && onError(img, err);\n  };\n  img.onload = onLoadWrapped;\n  img.onerror = onErrorWrapped;\n  if (src) {\n    img.src = src;\n  }\n  ;\n  if (isImageLoaded_1.isImageLoaded(img)) {\n    setTimeout(onLoadWrapped);\n  }\n  ;\n  return img;\n};\nexports.default = exports.createHTMLImageElement;","map":{"version":3,"names":["isImageLoaded_1","require","noOp_1","exports","createHTMLImageElement","src","onLoad","onError","img","Image","called","alt","callback","onload","noOp","onerror","onLoadWrapped","onErrorWrapped","err","isImageLoaded","setTimeout","default"],"sources":["/Users/loskilltrosblues/Desktop/dashboard/my-dashboard/node_modules/react-image-file/src/createHTMLImageElement.ts"],"sourcesContent":["import { isImageLoaded } from './isImageLoaded'\nimport { noOp } from './noOp'\n\n/** \n * callback used when the image loads successfully\n */\nexport interface OnImageLoadSuccess\n  { ( img:HTMLImageElement ):void\n  }\n\n/** \n * callback used when the image loading process produces an error\n */\nexport interface OnImageLoadError\n  { ( img:HTMLImageElement, err:ErrorEvent ):void\n  }\n\n/**\n * Creates a DOM image object and set its onload and onerror properties.\n * If the image was already cached, onload is set immediatly.\n * @param  src     the source of the image, You may leave it blank if you want to set it later\n * @param  onLoad  callback to call when the image loads (or has loaded). Receives the image object as a parameter\n * @param  onError callback to call when the image has an error. Receives the image object as a parameter.\n *                 Optional, but note that `onload` will never be called if an error occurs\n * @return         the image object\n */\nexport const createHTMLImageElement = \n  ( src: string, onLoad?: OnImageLoadSuccess, onError?: OnImageLoadError ):HTMLImageElement =>\n  { const img = new Image()\n  ; let called = false\n  ; img.alt = ''\n  ; const callback = () => \n    { if(!called)\n      { called = true\n      ; img.onload = noOp\n      ; img.onerror = noOp\n      ; return true\n      }\n    ; return false\n    }\n  ; const onLoadWrapped = () => callback() && onLoad && onLoad(img)\n  ; const onErrorWrapped = ( err: ErrorEvent ) => callback() && onError && onError( img, err )\n  ; img.onload = onLoadWrapped\n  ; img.onerror = onErrorWrapped\n  ; if(src)\n    { img.src = src\n    }\n  ; if( isImageLoaded( img ) )\n    { setTimeout( onLoadWrapped )\n    }\n  ; return img\n  }\n\nexport default createHTMLImageElement"],"mappings":";;;;;AAAA,IAAAA,eAAA,GAAAC,OAAA;AACA,IAAAC,MAAA,GAAAD,OAAA;AAgBA;;;;;;;;;AASaE,OAAA,CAAAC,sBAAsB,GACjC,UAAEC,GAAW,EAAEC,MAA2B,EAAEC,OAA0B;EACpE,IAAMC,GAAG,GAAG,IAAIC,KAAK,EAAE;EACvB,IAAIC,MAAM,GAAG,KAAK;EAClBF,GAAG,CAACG,GAAG,GAAG,EAAE;EACZ,IAAMC,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAG;IACf,IAAG,CAACF,MAAM,EACV;MAAEA,MAAM,GAAG,IAAI;MACbF,GAAG,CAACK,MAAM,GAAGX,MAAA,CAAAY,IAAI;MACjBN,GAAG,CAACO,OAAO,GAAGb,MAAA,CAAAY,IAAI;MAClB,OAAO,IAAI;IACb;IACF;IAAE,OAAO,KAAK;EACd,CAAC;EACD,IAAME,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAG;IAAM,OAAAJ,QAAQ,EAAE,IAAIN,MAAM,IAAIA,MAAM,CAACE,GAAG,CAAC;EAAnC,CAAmC;EAC/D,IAAMS,cAAc,GAAG,SAAjBA,cAAcA,CAAKC,GAAe;IAAM,OAAAN,QAAQ,EAAE,IAAIL,OAAO,IAAIA,OAAO,CAAEC,GAAG,EAAEU,GAAG,CAAE;EAA5C,CAA4C;EAC1FV,GAAG,CAACK,MAAM,GAAGG,aAAa;EAC1BR,GAAG,CAACO,OAAO,GAAGE,cAAc;EAC5B,IAAGZ,GAAG,EACN;IAAEG,GAAG,CAACH,GAAG,GAAGA,GAAG;EACf;EACF;EAAE,IAAIL,eAAA,CAAAmB,aAAa,CAAEX,GAAG,CAAG,EACzB;IAAEY,UAAU,CAAEJ,aAAa,CAAE;EAC7B;EACF;EAAE,OAAOR,GAAG;AACZ,CAAC;AAEHL,OAAA,CAAAkB,OAAA,GAAelB,OAAA,CAAAC,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}