{"ast":null,"code":"var _jsxFileName = \"/Users/loskilltrosblues/Desktop/dashboard/my-dashboard/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ImageFile from \"react-image-file\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageLoader = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const handleImageLoad = imageDataUrl => {\n    if (images.length < 4) {\n      setImages([...images, imageDataUrl]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(2, 1fr)\",\n      gridGap: \"10px\",\n      width: \"500px\",\n      height: \"500px\"\n    },\n    children: [images.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        border: \"1px solid black\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Image ${index}`,\n        style: {\n          maxWidth: \"100%\",\n          maxHeight: \"100%\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)), [...Array(4 - images.length)].map((_, index) => /*#__PURE__*/_jsxDEV(ImageFile, {\n      label: `Select image ${images.length + index + 1}`,\n      imagePreviewProps: {\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          border: \"1px solid black\"\n        }\n      },\n      onLoad: handleImageLoad\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageLoader, \"mOoWwfdsCKBG2MIVzAXM/MEStpE=\");\n_c = ImageLoader;\nexport default ImageLoader;\nvar _c;\n$RefreshReg$(_c, \"ImageLoader\");","map":{"version":3,"names":["React","useState","ImageFile","jsxDEV","_jsxDEV","ImageLoader","_s","images","setImages","handleImageLoad","imageDataUrl","length","style","display","gridTemplateColumns","gridGap","width","height","children","map","image","index","justifyContent","alignItems","border","src","alt","maxWidth","maxHeight","fileName","_jsxFileName","lineNumber","columnNumber","Array","_","label","imagePreviewProps","onLoad","_c","$RefreshReg$"],"sources":["/Users/loskilltrosblues/Desktop/dashboard/my-dashboard/src/App.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport ImageFile from \"react-image-file\";\n\nconst ImageLoader: React.FC = () => {\n  const [images, setImages] = useState<Array<string>>([]);\n\n  const handleImageLoad = (imageDataUrl: string) => {\n    if (images.length < 4) {\n      setImages([...images, imageDataUrl]);\n    }\n  };\n\n  return (\n    <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(2, 1fr)\", gridGap: \"10px\", width: \"500px\", height: \"500px\" }}>\n      {images.map((image, index) => (\n        <div key={index} style={{ width: \"100%\", height: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px solid black\" }}>\n          <img src={image} alt={`Image ${index}`} style={{ maxWidth: \"100%\", maxHeight: \"100%\" }} />\n        </div>\n      ))}\n      {[...Array(4 - images.length)].map((_, index) => (\n        <ImageFile\n          key={index}\n          label={`Select image ${images.length + index + 1}`}\n          imagePreviewProps={{ style: { width: \"100%\", height: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", border: \"1px solid black\" } }}\n          onLoad={handleImageLoad}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default ImageLoader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAgB,EAAE,CAAC;EAEvD,MAAMQ,eAAe,GAAIC,YAAoB,IAAK;IAChD,IAAIH,MAAM,CAACI,MAAM,GAAG,CAAC,EAAE;MACrBH,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEG,YAAY,CAAC,CAAC;IACtC;EACF,CAAC;EAED,oBACEN,OAAA;IAAKQ,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,mBAAmB,EAAE,gBAAgB;MAAEC,OAAO,EAAE,MAAM;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,GACtHX,MAAM,CAACY,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBjB,OAAA;MAAiBQ,KAAK,EAAE;QAAEI,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE,MAAM;QAAEJ,OAAO,EAAE,MAAM;QAAES,cAAc,EAAE,QAAQ;QAAEC,UAAU,EAAE,QAAQ;QAAEC,MAAM,EAAE;MAAkB,CAAE;MAAAN,QAAA,eACpJd,OAAA;QAAKqB,GAAG,EAAEL,KAAM;QAACM,GAAG,EAAG,SAAQL,KAAM,EAAE;QAACT,KAAK,EAAE;UAAEe,QAAQ,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG,GADlFX,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAGhB,CAAC,EACD,CAAC,GAAGC,KAAK,CAAC,CAAC,GAAG1B,MAAM,CAACI,MAAM,CAAC,CAAC,CAACQ,GAAG,CAAC,CAACe,CAAC,EAAEb,KAAK,kBAC1CjB,OAAA,CAACF,SAAS;MAERiC,KAAK,EAAG,gBAAe5B,MAAM,CAACI,MAAM,GAAGU,KAAK,GAAG,CAAE,EAAE;MACnDe,iBAAiB,EAAE;QAAExB,KAAK,EAAE;UAAEI,KAAK,EAAE,MAAM;UAAEC,MAAM,EAAE,MAAM;UAAEJ,OAAO,EAAE,MAAM;UAAES,cAAc,EAAE,QAAQ;UAAEC,UAAU,EAAE,QAAQ;UAAEC,MAAM,EAAE;QAAkB;MAAE,CAAE;MAC5Ja,MAAM,EAAE5B;IAAgB,GAHnBY,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAKb,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV,CAAC;AAAC1B,EAAA,CA1BID,WAAqB;AAAAiC,EAAA,GAArBjC,WAAqB;AA4B3B,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}