{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar load_1 = require(\"./load\");\nvar createHTMLImageElement_1 = require(\"./createHTMLImageElement\");\n/**\n * Loads an image buffer from a File, a Blob, or a string\n * Then creates an object with { src, alt, width, height }\n * and calls the passed callback with that object.\n *\n * It accomplishes this by creating an HTML image element,\n * waiting for it to load, then calling the callback,\n * then discarding the image element\n * @param props anything that can become a readable image\n * @param cb a function of shape (err:Error, props:imageProps), where `imageProps` is the object described above\n *\n */\nexports.loadImageProps = function (props, cb) {\n  return load_1.loadAnything(props, function (err, res, done) {\n    if (err) {\n      cb(err);\n    } else if (res) {\n      createHTMLImageElement_1.createHTMLImageElement(res.src, function (img) {\n        var ret = {\n          src: res.src,\n          alt: 'alt' in res ? res.alt : '',\n          width: img.width,\n          height: img.height\n        };\n        if (done) {\n          done();\n        }\n        ;\n        cb(null, ret);\n      });\n    }\n  });\n};\nexports.default = exports.loadImageProps;","map":{"version":3,"names":["load_1","require","createHTMLImageElement_1","exports","loadImageProps","props","cb","loadAnything","err","res","done","createHTMLImageElement","src","img","ret","alt","width","height","default"],"sources":["/Users/loskilltrosblues/Desktop/dashboard/my-dashboard/node_modules/react-image-file/src/loadImageProps.ts"],"sourcesContent":["import {loadAnything, ImageContent} from './load'\nimport {createHTMLImageElement} from './createHTMLImageElement'\n\nexport interface ImageProps\n  { src:string\n  ; alt:string\n  ; width:number\n  ; height:number\n  }\n\nexport interface CreateImageFromReadableCallback\n  { (err?:Error|DOMError|null,props?:ImageProps):any\n  }\n\n/**\n * Loads an image buffer from a File, a Blob, or a string\n * Then creates an object with { src, alt, width, height }\n * and calls the passed callback with that object.\n * \n * It accomplishes this by creating an HTML image element,\n * waiting for it to load, then calling the callback,\n * then discarding the image element\n * @param props anything that can become a readable image\n * @param cb a function of shape (err:Error, props:imageProps), where `imageProps` is the object described above\n * \n */\nexport const loadImageProps = \n  ( props: File | Blob | string\n  , cb:CreateImageFromReadableCallback\n  ) =>\n  ( loadAnything\n    ( props\n    , ( err: Error | DOMError | null\n      , res?: ImageContent\n      , done?: () => any\n      ) => \n      { if( err )\n        { cb( err )\n        }\n        else if( res )\n        { createHTMLImageElement( res.src, ( img ) => \n          { const ret = \n            { src:res.src\n            ,\talt:( ( 'alt' in res ) ? ( res as any ).alt : '' )\n            ,\twidth:img.width\n            ,\theight:img.height\n            }\n          ; if( done )\n            { done()\n            }\n          ; cb( null, ret )\n          })\n        }\n      }\n  )\n)\n\nexport default loadImageProps"],"mappings":";;;;;AAAA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,wBAAA,GAAAD,OAAA;AAaA;;;;;;;;;;;;AAYaE,OAAA,CAAAC,cAAc,GACzB,UAAEC,KAA2B,EAC3BC,EAAkC;EAEpC,OAAEN,MAAA,CAAAO,YAAY,CACVF,KAAK,EACL,UAAEG,GAA4B,EAC5BC,GAAkB,EAClBC,IAAgB;IAEhB,IAAIF,GAAI,EACR;MAAEF,EAAE,CAAEE,GAAG,CAAE;IACX,CAAC,MACI,IAAIC,GAAI,EACb;MAAEP,wBAAA,CAAAS,sBAAsB,CAAEF,GAAG,CAACG,GAAG,EAAE,UAAEC,GAAG;QACpC,IAAMC,GAAG,GACT;UAAEF,GAAG,EAACH,GAAG,CAACG,GAAG;UACXG,GAAG,EAAK,KAAK,IAAIN,GAAG,GAAOA,GAAY,CAACM,GAAG,GAAG,EAAI;UAClDC,KAAK,EAACH,GAAG,CAACG,KAAK;UACfC,MAAM,EAACJ,GAAG,CAACI;SACZ;QACD,IAAIP,IAAK,EACT;UAAEA,IAAI,EAAE;QACR;QACF;QAAEJ,EAAE,CAAE,IAAI,EAAEQ,GAAG,CAAE;MACjB,CAAC,CAAC;IACJ;EACF,CAAC,CACJ;AAxBD,CAyBD;AAEDX,OAAA,CAAAe,OAAA,GAAef,OAAA,CAAAC,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}